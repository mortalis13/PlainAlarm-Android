// gradle-8.3
// jdk-17

apply plugin: 'com.android.application'

buildscript {
  repositories {
    gradlePluginPortal()
    google()
    mavenCentral()
  }
  
  dependencies {
    classpath 'com.android.tools.build:gradle:8.1.2'
  }
}

allprojects {
  repositories {
    google()
    mavenCentral()
  }
}


// -- app
android {
  compileSdkVersion 34
  
  defaultConfig {
    namespace 'org.mortalis.plainalarm'
    vectorDrawables.useSupportLibrary = true
    
    versionCode 160
    versionName String.format('%d.%d.%d', (int)(versionCode/10/10), (int)(versionCode/10)%10, versionCode%10)
    
    minSdkVersion 16
    targetSdkVersion 33
    
    resValue 'string', 'app_version', versionName
  }
  
  signingConfigs {
    release {
      storeFile file('release/plainalarm-release-key.jks')
      storePassword 'plainalarm'
      keyAlias 'plainalarm-alias'
      keyPassword 'plainalarm'
    }
  }
  
  buildTypes {
    release {
      minifyEnabled true
      // shrinkResources true
      debuggable false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }
  }
  
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
  }

  sourceSets {
    main {
      manifest.srcFile 'AndroidManifest.xml'
      java.srcDirs 'src'
      res.srcDirs 'res'
      jniLibs.srcDirs 'libs'
      assets.srcDirs 'assets'
    }

    debug.setRoot('build-types/debug')
    release.setRoot('build-types/release')
  }
  
  lintOptions {
    // checkReleaseBuilds false
    // abortOnError false
    disable 'ReferenceType'
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation fileTree(dir: 'libs', include: ['*.aar'])
  
  implementation 'androidx.appcompat:appcompat:1.6.1'
  implementation 'androidx.media:media:1.6.0'
  implementation 'androidx.recyclerview:recyclerview:1.3.1'
}

def appStart() {
  // install allowing version downgrade: adb install -d debug.apk
  return String.format('adb shell am start -n %s/.MainActivity', android.namespace).split()
}

task appStart(type: Exec, dependsOn: 'installDebug') {
  commandLine appStart()
}

tasks.withType(JavaCompile) {
  // options.compilerArgs << '-Xlint:deprecation'
}
