// gradle-6.7
// jdk1.8.0_91

apply plugin: 'com.android.application'

buildscript {
  repositories {
    google()
    jcenter()
    mavenLocal()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  
  dependencies {
    classpath 'com.android.tools.build:gradle:4.1.0'
  }
}

allprojects {
  repositories {
    google()
    jcenter()
  }
}


// -- app
android {
  compileSdkVersion 30
  
  defaultConfig {
    applicationId "org.mortalis.plainalarm"
    vectorDrawables.useSupportLibrary = true
    
    versionCode 131
    versionName String.format('%d.%d.%d', (int)(versionCode/10/10), (int)(versionCode/10)%10, versionCode%10)
    
    minSdkVersion 16
    targetSdkVersion 30
    
    resValue "string", "app_version", versionName
  }
  
  signingConfigs {
    release {
      storeFile file("release/plainalarm-release-key.jks")
      storePassword "plainalarm"
      keyAlias "plainalarm-alias"
      keyPassword "plainalarm"
    }
  }
  
  buildTypes {
    release {
      minifyEnabled true
      // shrinkResources true
      debuggable false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }
  }
  
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  sourceSets {
    main {
      manifest.srcFile 'AndroidManifest.xml'
      java.srcDirs 'src'
      res.srcDirs 'res'
      jniLibs.srcDirs 'libs'
      assets.srcDirs 'assets'
    }

    debug.setRoot('build-types/debug')
    release.setRoot('build-types/release')
  }
  
  lintOptions {
    // checkReleaseBuilds false
    // abortOnError false
    disable "ReferenceType"
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation fileTree(dir: 'libs', include: ['*.aar'])
  
  implementation 'com.android.support:appcompat-v7:27.0.2'
  implementation 'com.android.support:support-v4:27.0.2'
  
  implementation 'com.android.support:recyclerview-v7:27.0.2'
}

task appStart(type: Exec, dependsOn: 'installDebug') {
  commandLine = ["adb", "shell", "monkey", "-p", "${android.defaultConfig.applicationId} 1"]
}

task appStartRelease(type: Exec, dependsOn: 'installRelease') {
  commandLine = ["adb", "shell", "monkey", "-p", "${android.defaultConfig.applicationId} 1"]
}


tasks.withType(JavaCompile) {
  // options.compilerArgs << '-Xlint:deprecation'
}
